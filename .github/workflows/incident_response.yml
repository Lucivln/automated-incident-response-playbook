# .github/workflows/incident_response.yml
name: Automated Cloud Incident Response

on:
  workflow_dispatch:
    inputs:
      target_host:
        description: "Target EC2 instance name for containment"
        required: true
        default: "Wazuh-Target"
      alert_severity:
        description: "Severity level (e.g., 12 for critical file change)"
        required: true
        default: "12"

jobs:
  containment:
    name: 1️⃣ Host Containment (Terraform)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5   # ✅ specify version

      - name: Debug repository structure
        run: |
          echo "Current path: $(pwd)"
          ls -R

      - name: Terraform Init
        working-directory: aws/terraform
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: aws/terraform
        run: terraform validate

      - name: Apply Containment (Quarantine)
        id: apply_quarantine
        working-directory: aws/terraform
        run: terraform apply -auto-approve

  remediation:
    name: 2️⃣ Forensic Remediation (Ansible)
    runs-on: ubuntu-latest
    needs: containment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python and Ansible
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Ansible and dependencies
        run: pip install ansible boto3 botocore

      - name: Run Forensic Playbook
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Running forensics on: ${{ github.event.inputs.target_host }}"
          ansible-playbook -i aws/ansible/inventory/aws_ec2.yml \
            aws/ansible/playbooks/forensics.yml \
            --extra-vars "ansible_user=ubuntu target_host=${{ github.event.inputs.target_host }}" \
            --private-key ${{ secrets.SSH_PRIVATE_KEY }}

